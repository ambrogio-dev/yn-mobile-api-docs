{
  "openapi": "3.0.1",
  "info": {
    "title": "YouNeed Mobile API v2",
    "description": "The YouNeed API enables programmatic access to YouNeed in unique and advanced ways.",
    "contact": {
      "email": "se@ambrogio.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://alpha.web.youneed.it/mobile/api/v2"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication API"
    },
    {
      "name": "User",
      "description": "Authenticated user API"
    },
    {
      "name": "Timecard",
      "description": "Timecard API"
    }
  ],
  "paths": {
    "/auth/Login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "description": "Logs in a user.",
        "requestBody": {
          "description": "Credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tokens"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout",
        "description": "Logs out the current authenticated user.",
        "requestBody": {
          "$ref": "#/components/requestBodies/RefreshTokenBody"
        },
        "responses": {
          "200": {
            "description": "User logged out."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh",
        "description": "Refresh the API access token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RefreshTokenBody"
        },
        "responses": {
          "200": {
            "description": "Tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Me",
        "description": "User profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/timecard/settings": {
      "get": {
        "tags": [
          "Timecard"
        ],
        "summary": "Timecard settings",
        "description": "Settings",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Settings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimecardSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/timecard/entries": {
      "post": {
        "tags": [
          "Timecard"
        ],
        "summary": "Record a new working time",
        "description": "Record a new working time",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/TimecardRecordNew"
        },
        "responses": {
          "200": {
            "description": "Time registration success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeCardRecordId"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/timecard/entries/{id}": {
      "get": {
        "tags": [
          "Timecard"
        ],
        "summary": "Represents a working time record",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Working time record id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Working time record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeCardRecord"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "Timecard"
        ],
        "summary": "Updates a previously recorded working time.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/TimcardUpdate"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Working time record id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Ok"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "requestBodies": {
      "RefreshTokenBody": {
        "description": "A JSON object containing the current refresh token.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RefreshToken"
            }
          }
        }
      },
      "AccessTokenBody": {
        "description": "A JSON object containing the new JWT access token.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AccessToken"
            }
          }
        }
      },
      "TimecardRecordNew": {
        "description": "A JSON object describing a new working time record.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TimecardRecordNew"
            }
          }
        }
      },
      "TimcardUpdate": {
        "description": "TODO",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TimeCardRecordUpdate"
            }
          }
        }
      }
    },
    "responses": {
      "Ok": {
        "description": "Ok"
      },
      "BadRequest": {
        "description": "Bad Request"
      },
      "Unauthorized": {
        "description": "Unauthorized"
      },
      "Forbidden": {
        "description": "Access not granted (The user is blocked or doesn't have enough grants to access the API)"
      },
      "NotFound": {
        "description": "The specified resource was not found"
      }
    },
    "schemas": {
      "Credentials": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username."
          },
          "password": {
            "type": "string",
            "description": "Password."
          },
          "application_id": {
            "type": "string",
            "description": "App unique id."
          },
          "os": {
            "type": "string",
            "enum": [
              "ANDROID",
              "iOS"
            ],
            "description": "Mobile OS type:\n * `ANDROID` - Android\n * `iOS` - iOS\n"
          }
        },
        "required": [
          "username",
          "password",
          "application_id",
          "os"
        ]
      },
      "RefreshToken": {
        "type": "object",
        "properties": {
          "refresh_token": {
            "type": "string",
            "description": "Refresh token."
          }
        },
        "required": [
          "refresh_token"
        ]
      },
      "AccessToken": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Access token."
          }
        },
        "required": [
          "access_token"
        ]
      },
      "Tokens": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "JWT."
          },
          "refresh_token": {
            "type": "string",
            "description": "Refresh token."
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "User id."
          },
          "customer_id": {
            "type": "integer",
            "description": "Customer id."
          },
          "username": {
            "type": "string",
            "description": "Username."
          },
          "name": {
            "type": "string",
            "description": "Name."
          },
          "surname": {
            "type": "string",
            "description": "Surname."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email."
          },
          "grants": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "customer_id",
          "username",
          "name",
          "surname",
          "email",
          "grants"
        ]
      },
      "TimecardSettings": {
        "type": "object",
        "properties": {
          "justifications": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "in",
                    "out",
                    "both"
                  ],
                  "description": "Direction for which justification is available : * `in` - The justification is available only for a entry. * `out` - The justification is available only for an exit. * `both` - The justification is available only for both entry and exit.\n"
                },
                "localization": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "example": {
                    "en": "justification name",
                    "ita": "nome del giustificativo"
                  }
                }
              },
              "required": [
                "id",
                "direction",
                "localization"
              ]
            },
            "description": "Justifications."
          }
        },
        "required": [
          "justifications"
        ]
      },
      "TimecardRecordNew": {
        "type": "object",
        "properties": {
          "is_in": {
            "type": "boolean",
            "description": "Whether or not the time entry represent an entrance."
          },
          "justification_id": {
            "type": "integer",
            "description": "The time entry justification kind (if any)."
          },
          "notes": {
            "type": "string",
            "example": "notes"
          }
        },
        "required": [
          "is_in"
        ],
        "oneOf": [
          {
            "$ref": "#/components/schemas/Realtime"
          },
          {
            "$ref": "#/components/schemas/ManualInserted"
          }
        ]
      },
      "Realtime": {
        "type": "object",
        "description": "TODO",
        "properties": {
          "geolocation": {
            "$ref": "#/components/schemas/Geolocation"
          }
        }
      },
      "ManualInserted": {
        "type": "object",
        "description": "TODO",
        "properties": {
          "date": {
            "type": "string",
            "example": 1655460944344
          }
        },
        "required": [
          "date"
        ]
      },
      "Geolocation": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "integer",
            "minimum": -90,
            "maximum": 90
          },
          "longitude": {
            "type": "integer",
            "minimum": -180,
            "maximum": 180
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "TimeCardRecordId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Newly registered time id."
          }
        },
        "required": [
          "id"
        ]
      },
      "TimeCardRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Record id."
          },
          "is_in": {
            "type": "integer",
            "description": "Whether or not the tracked time is an entry or not."
          },
          "is_validated": {
            "type": "integer",
            "description": "Whether or not the tracked time had been validated."
          },
          "is_confirmed": {
            "type": "integer",
            "description": "Whether or not the tracked time had been confirmed."
          },
          "date": {
            "type": "string",
            "description": "Tracked date."
          },
          "notes": {
            "type": "string",
            "description": "Additional notes."
          },
          "justification_id": {
            "type": "integer",
            "description": "Justification id (if any)."
          },
          "geolocation": {
            "$ref": "#/components/schemas/Geolocation"
          }
        },
        "required": [
          "id",
          "is_in",
          "is_validated",
          "is_confirmed",
          "date"
        ]
      },
      "TimeCardRecordUpdate": {
        "type": "object",
        "properties": {
          "is_in": {
            "type": "integer",
            "description": "Whether or not the tracked time is an entry or not."
          },
          "date": {
            "type": "string",
            "description": "Tracked date."
          },
          "notes": {
            "type": "string",
            "description": "Additional notes."
          },
          "justification_id": {
            "type": "integer",
            "description": "Justification id (if any)."
          }
        },
        "required": [
          "id",
          "is_in",
          "date"
        ]
      }
    }
  }
}